apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init
data:
  01-create-app-user.js: |
    const dbName = process.env.APP_DB_NAME || 'employees';
    const user   = process.env.APP_DB_USERNAME || 'appuser';
    const pass   = process.env.APP_DB_PASSWORD || 'pass';
    const appDb  = db.getSiblingDB(dbName);
    appDb.createUser({ user, pwd: pass, roles: [{ role:'readWrite', db: dbName }] });
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:6
          command: ["mongod", "--bind_ip_all"]
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: admin
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: g22
            - name: APP_DB_NAME
              value: employees
            - name: APP_DB_USERNAME
              value: appuser
            - name: APP_DB_PASSWORD
              value: pass
            - name: MONGO_INITDB_DATABASE
              value: employees
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: init
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        - name: init
          configMap:
            name: mongo-init
